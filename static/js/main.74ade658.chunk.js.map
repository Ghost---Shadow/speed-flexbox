{"version":3,"sources":["Segmentation/sketch/utils.js","Segmentation/sketch/constants.js","Segmentation/sketch/Tree.js","constants/types.js","Segmentation/sketch/TreeRenderer.js","constants.js","Segmentation/sketch/index.js","useWindowDimensions.js","Segmentation/index.js","CodeGeneration/plugins/react-mui/utils.js","CodeGeneration/plugins/react-mui/generate-jss.js","CodeGeneration/plugins/react-mui/generate-dom.js","CodeGeneration/plugins/react-mui/generate-props.js","CodeGeneration/plugins/react-mui/generate-props-types.js","CodeGeneration/plugins/react-mui/generate-state.js","CodeGeneration/plugins/react-mui/generate-jsx.js","CodeGeneration/plugins/react-mui/generate-storybook.js","CodeGeneration/plugins/react-mui/generate-debug-css.js","CodeGeneration/plugins/index.js","CodeGeneration/plugins/react-mui/index.js","CodeGeneration/plugins/ast/index.js","CodeGeneration/index.js","App.js","serviceWorker.js","index.js"],"names":["interp","a","b","t","interp1D","direction","start","interpV","x","y","interp2D","c","vec2","cumulativeSum","arr","reduce","r","push","length","Tree","end","parent","segments","this","children","ghosts","id","depth","createSegments","weights","w","i","cumW","unshift","cStart","cEnd","child","p","axis","getMajorAxis","mouse","mouseX","mouseY","distances","map","Math","abs","findDistance1D","slice","closestChildStart","leftChildIndex","rightChildIndex","moveActiveSegment","v","min","max","lowerBound","upperBound","clampedMouse","PADDING","newDirection","newSegments","active","width","height","fill","stroke","rect","forEach","draw","drawGhosts","fontSize","typeToIconLut","icons","g","type","textSize","text","join","isWithinX","isWithinY","isPointInAabb","shouldBeActive","findActive","filter","pop","ghostId","scaleFactor","flex","pAxis","pSize","toJson","isRoot","undefined","ast","fromJson","TreeRenderer","root","initialize","loadAst","findHighestId","tree","selfId","highestChildIds","mouseDragged","update","toggleDirection","setDirection","incrementSegments","setSegments","decrementSegments","selectActive","selectActivesParent","pickSegment","popGhost","pushGhost","dumpAst","writeLocalStorage","localStorage","setItem","JSON","stringify","serialAst","getItem","validAst","parse","sketch","canvasWidth","window","innerWidth","canvasHeight","innerHeight","img","setup","createCanvas","drop","gotFile","myCustomRedrawAccordingToNewPropsHandler","props","resizeCanvas","image","background","noStroke","textAlign","CENTER","mousePressed","keyReleased","87","83","68","65","82","81","49","50","51","keyCode","file","createImg","data","newImage","hide","aspect","newHeight","console","log","getWindowDimensions","useStyles","makeStyles","wrapper","display","mainWrapper","justifyContent","drawerWrapper","maxWidth","controls","flexDirection","margin","Controls","classes","className","Typography","Divider","Segmentation","defaultWidth","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","defaultHeight","Paper","style","Button","variant","color","onClick","removeItem","padId","padStart","generateClassName","generateGhostClassName","ghost","generateGhostPropName","generateGhostState","value","setter","round","num","Number","EPSILON","toRem","px","buttonGhostFormatter","name","defaultGhostFormatter","ghostFormatter","generateHelper","self","rootNodeDimensions","ghostArr","childStringArr","childAst","concat","generate","labelGhostFormatter","textProp","onClickProp","inputFieldGhostFormatter","ghostFormatterLookup","ghostDoms","innerDom","ghostPropArr","acc","next","jss","generateJss","dom","generateDom","generateProps","propTypes","generatePropsTypes","state","generateState","availablePlugins","label","plugins","REACT_MUI","jsxCode","generateJsx","storybookCode","generateStorybook","debugCssCode","generateDebugCss","opts","parser","parserBabel","language","files","prettier","format","AST","backgroundColor","syntaxHighlighter","padding","fileSelector","formControl","FileSelector","fileNames","currentFileIndex","setCurrentFileIndex","tabs","fileName","Tab","key","Tabs","orientation","onChange","_","PluginSelector","pluginOptions","pluginType","setPluginType","menuItems","pluginOption","MenuItem","FormControl","InputLabel","Select","labelId","e","target","CodeGeneration","lastUsedPlugin","defaultPlugin","generation","plugin","Object","keys","code","onDownload","zip","Jszip","generateAsync","content","FileSaver","saveAs","showLineNumbers","dark","navigator","clipboard","writeText","TabPanel","index","role","hidden","aria-labelledby","Box","theme","flexGrow","palette","paper","tabWrapper","tabPannelWrapper","App","queryTab","parseInt","queryString","location","search","tab","setTab","aria-controls","event","newValue","history","pushState","aria-label","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.74ade658.chunk.js","sourcesContent":["import { DIRECTION_ROW, DIRECTION_COLUMN } from './constants';\n\nexport const interp = (a, b, t) => a * (1 - t) + b * t;\n\nexport const interp2D = (a, b, t) => ({\n  x: interp(a.x, b.x, t),\n  y: interp(a.y, b.y, t),\n});\n\nexport const interp1D = (a, b, t, direction, start) => {\n  const interpV = interp2D(a, b, t);\n  const c = start ? a : b;\n  const lut = {\n    [DIRECTION_ROW]: { x: interpV.x, y: c.y },\n    [DIRECTION_COLUMN]: { y: interpV.y, x: c.x },\n  };\n  return lut[direction];\n};\n\nexport const isPointInAabb = (p, a, b) => {\n  const isWithinX = p.x >= a.x && p.x <= b.x;\n  const isWithinY = p.y >= a.y && p.y <= b.y;\n\n  return isWithinX && isWithinY;\n};\n\nexport const vec2 = (x, y) => ({ x, y });\n\n// https://gist.github.com/engelen/fbce4476c9e68c52ff7e5c2da5c24a28\nexport function argmMin(array) {\n  return array.map((x, i) => [x, i]).reduce((r, a) => (a[0] < r[0] ? a : r))[1];\n}\n\nexport const findDistance1D = (a, b, axis) => Math.abs(a[axis] - b[axis]);\n\nexport const clamp = (v, min, max) => Math.min(max, Math.max(min, v));\n\nexport const cumulativeSum = (arr) => arr.reduce((r, a) => {\n  r.push(((r.length && r[r.length - 1]) || 0) + a);\n  return r;\n}, []);\n\nexport const findHighestId = (tree) => {\n  const selfId = tree.id;\n  const highestChildIds = tree.children.map(findHighestId);\n\n  return Math.max(selfId, ...highestChildIds);\n};\n","export const DIRECTION_ROW = 'row';\nexport const DIRECTION_COLUMN = 'column';\n","import {\n  interp1D, isPointInAabb, vec2, findDistance1D, argmMin, clamp, cumulativeSum,\n} from './utils';\nimport { DIRECTION_ROW, DIRECTION_COLUMN } from './constants';\nimport { BUTTON_GHOST, INPUT_FIELD_GHOST, LABEL_GHOST } from '../../constants/types';\n\nclass Tree {\n  // Counter for generated tree nodes\n  static id = 0;\n\n  // Counter for generated ghosts\n  static ghostId = 0;\n\n  // Min distance between segments/AKA min size of child\n  static PADDING = 10;\n\n  constructor(start, end, direction, parent, segments) {\n    this.start = start;\n    this.end = end;\n    this.direction = direction;\n    this.parent = parent;\n    this.children = [];\n    this.ghosts = [];\n    this.id = Tree.id;\n    this.depth = parent ? parent.depth + 1 : 0;\n    Tree.id += 1;\n\n    this.createSegments(segments);\n  }\n\n  createSegments(segments, weights = []) {\n    this.children = [];\n    const w = [...weights];\n    if (weights.length !== segments) {\n      for (let i = 0; i < segments; i += 1) {\n        w[i] = 1 / segments;\n      }\n    }\n    const cumW = cumulativeSum(w);\n    cumW.unshift(0);\n\n    this.segments = segments;\n    const { start, end, direction } = this;\n\n    if (segments > 1) {\n      for (let i = 0; i < segments; i += 1) {\n        const cStart = interp1D(start, end, cumW[i], direction, true);\n        const cEnd = interp1D(start, end, cumW[i + 1], direction, false);\n        const child = new Tree(cStart, cEnd, DIRECTION_ROW, this, 1);\n        this.children.push(child);\n      }\n    }\n  }\n\n  pickSegment(p) {\n    if (this.children.length < 2) return;\n\n    const axis = this.getMajorAxis();\n    const mouse = vec2(p.mouseX, p.mouseY);\n    const distances = this.children\n      .map((child) => findDistance1D(mouse, child.start, axis))\n      .slice(1);\n    const closestChildStart = argmMin(distances);\n\n    this.leftChildIndex = closestChildStart;\n    this.rightChildIndex = closestChildStart + 1;\n  }\n\n  update(p) {\n    this.moveActiveSegment(p);\n  }\n\n  getMajorAxis() {\n    return { [DIRECTION_ROW]: 'x', [DIRECTION_COLUMN]: 'y' }[this.direction];\n  }\n\n  moveActiveSegment(p) {\n    if (this.children.length < 2) return;\n\n    const axis = this.getMajorAxis();\n    const mouse = { [DIRECTION_ROW]: p.mouseX, [DIRECTION_COLUMN]: p.mouseY }[this.direction];\n\n    const { leftChildIndex, rightChildIndex } = this;\n\n    const lowerBound = this.children[leftChildIndex].start[axis];\n    const upperBound = this.children[rightChildIndex].end[axis];\n\n    const clampedMouse = clamp(mouse, lowerBound + Tree.PADDING, upperBound - Tree.PADDING);\n\n    this.children[leftChildIndex].end[axis] = clampedMouse;\n    this.children[rightChildIndex].start[axis] = clampedMouse;\n\n    if (this.children[leftChildIndex].children) {\n      this.children[leftChildIndex].children = [];\n    }\n    if (this.children[rightChildIndex].children) {\n      this.children[rightChildIndex].children = [];\n    }\n  }\n\n  setDirection(newDirection) {\n    this.direction = newDirection;\n    this.createSegments(this.segments);\n  }\n\n  setSegments(newSegments) {\n    if (newSegments < 1) return;\n    this.ghosts = [];\n    this.createSegments(newSegments);\n  }\n\n  draw(p, active = {}) {\n    const width = this.end.x - this.start.x;\n    const height = this.end.y - this.start.y;\n    if (active.id === this.id) {\n      p.fill(255, 255, 0, 20);\n      p.stroke(255, 0, 0);\n    } else {\n      p.fill(255, 255, 255, Math.min(this.depth * 20, 255));\n      p.stroke(0);\n    }\n    p.rect(this.start.x, this.start.y, width, height);\n    this.children.forEach((child) => child.draw(p, active));\n    this.drawGhosts(p);\n  }\n\n  drawGhosts(p) {\n    const fontSize = Math.min(14, this.end.y - this.start.y - 2); // px\n    const x = (this.start.x + this.end.x) / 2;\n    const y = (this.start.y + this.end.y) / 2;\n\n    const typeToIconLut = {\n      [LABEL_GHOST]: 'L',\n      [BUTTON_GHOST]: 'B',\n      [INPUT_FIELD_GHOST]: 'I',\n    };\n\n    const icons = this.ghosts.map((g) => `${typeToIconLut[g.type]}${g.id}`);\n\n    p.textSize(fontSize);\n    p.text(icons.join(','), x, y);\n  }\n\n  shouldBeActive(x, y) {\n    if (this.children.length) return false;\n    return isPointInAabb(vec2(x, y), this.start, this.end);\n  }\n\n  findActive(x, y) {\n    if (this.shouldBeActive(x, y)) {\n      return this;\n    }\n    const candidates = this.children\n      .map((child) => child.findActive(x, y))\n      .filter((p) => p);\n\n    return candidates[0];\n  }\n\n  popGhost() {\n    this.ghosts.pop();\n  }\n\n  pushGhost(type) {\n    if (!this.children.length) {\n      Tree.ghostId += 1;\n      this.ghosts.push({ id: Tree.ghostId, type });\n    }\n  }\n\n  toJson(scaleFactor) {\n    let flex = 1;\n    if (this.parent) {\n      const pAxis = this.parent.getMajorAxis();\n      const pSize = this.parent.end[pAxis] - this.parent.start[pAxis];\n      const size = this.end[pAxis] - this.start[pAxis];\n      flex = size / pSize;\n    }\n    return {\n      id: this.id,\n      flex,\n      direction: this.direction,\n      children: this.children.map((c) => c.toJson(scaleFactor)),\n      ghosts: this.ghosts,\n      height: (this.end.y - this.start.y) / scaleFactor,\n      width: (this.end.x - this.start.x) / scaleFactor,\n      isRoot: this.parent ? undefined : true,\n    };\n  }\n\n  fromJson(ast) {\n    if (ast.id === undefined) return;\n\n    this.id = ast.id;\n    this.direction = ast.direction;\n    const weights = ast.children.map((c) => c.flex);\n    this.segments = Math.max(ast.children.length, 1);\n    this.createSegments(this.segments, weights);\n    this.children.forEach((child, i) => {\n      child.fromJson(ast.children[i]);\n    });\n    this.ghosts = ast.ghosts;\n  }\n}\n\nexport default Tree;\n","export const LABEL_GHOST = 'LABEL_GHOST';\nexport const BUTTON_GHOST = 'BUTTON_GHOST';\nexport const INPUT_FIELD_GHOST = 'INPUT_FIELD_GHOST';\n","import Tree from './Tree';\n\nimport { DIRECTION_ROW, DIRECTION_COLUMN } from './constants';\nimport { findHighestId, vec2 } from './utils';\nimport { LOCAL_STORAGE_KEY_AST } from '../../constants';\n\n// Abstract class\nclass TreeRenderer {\n  static root = null;\n\n  static active = null;\n\n  static p = null;\n\n  static scaleFactor = 1;\n\n  static initialize = (p, scaleFactor) => {\n    Tree.id = 0;\n    TreeRenderer.p = p;\n    TreeRenderer.root = new Tree(vec2(0, 0), vec2(p.width, p.height), DIRECTION_ROW, null, 2);\n    TreeRenderer.loadAst();\n    Tree.id = findHighestId(TreeRenderer.root) + 1;\n    TreeRenderer.active = TreeRenderer.root;\n    TreeRenderer.scaleFactor = scaleFactor;\n  };\n\n  static mouseDragged = () => {\n    if (!TreeRenderer.active) return;\n    TreeRenderer.active.update(TreeRenderer.p);\n  };\n\n  static draw = () => {\n    if (!TreeRenderer.root) return;\n    TreeRenderer.root.draw(TreeRenderer.p, TreeRenderer.active);\n  };\n\n  static toggleDirection = () => {\n    if (!TreeRenderer.root) return;\n    if (!TreeRenderer.active) return;\n    const newDirection = TreeRenderer.active.direction === DIRECTION_COLUMN\n      ? DIRECTION_ROW : DIRECTION_COLUMN;\n    TreeRenderer.active.setDirection(newDirection);\n  };\n\n  static incrementSegments = () => {\n    if (!TreeRenderer.root) return;\n    if (!TreeRenderer.active) return;\n    TreeRenderer.active.setSegments(TreeRenderer.active.segments + 1);\n  };\n\n  static decrementSegments = () => {\n    if (!TreeRenderer.root) return;\n    if (!TreeRenderer.active) return;\n    TreeRenderer.active.setSegments(TreeRenderer.active.segments - 1);\n  };\n\n  static selectActive = () => {\n    if (!TreeRenderer.root) return;\n    const { p } = TreeRenderer;\n    TreeRenderer.active = TreeRenderer.root.findActive(p.mouseX, p.mouseY);\n  };\n\n  static selectActivesParent = () => {\n    if (!TreeRenderer.active) return;\n    if (TreeRenderer.active.parent) {\n      TreeRenderer.active = TreeRenderer.active.parent;\n    }\n  };\n\n  static pickSegment = () => {\n    if (!TreeRenderer.active) return;\n    TreeRenderer.active.pickSegment(TreeRenderer.p);\n  };\n\n  static popGhost = () => {\n    if (!TreeRenderer.active) return;\n    TreeRenderer.active.popGhost();\n  }\n\n  static pushGhost = (type) => () => {\n    if (!TreeRenderer.active) return;\n    TreeRenderer.active.pushGhost(type);\n  }\n\n  static dumpAst = (writeLocalStorage = false) => {\n    if (!TreeRenderer.root) {\n      return {\n        flex: 1,\n        direction: 'row',\n        children: [],\n      };\n    }\n    const ast = TreeRenderer.root.toJson(TreeRenderer.scaleFactor);\n    if (writeLocalStorage) {\n      localStorage.setItem(LOCAL_STORAGE_KEY_AST, JSON.stringify(ast));\n    }\n    return ast;\n  }\n\n  static loadAst = (ast = null) => {\n    if (!TreeRenderer.root) return;\n    if (ast === null) {\n      const serialAst = localStorage.getItem(LOCAL_STORAGE_KEY_AST);\n      if (serialAst) {\n        const validAst = JSON.parse(serialAst);\n        TreeRenderer.root.fromJson(validAst);\n        TreeRenderer.active = TreeRenderer.root;\n      }\n    } else {\n      TreeRenderer.root.fromJson(ast);\n      TreeRenderer.active = TreeRenderer.root;\n    }\n  }\n}\n\nexport default TreeRenderer;\n","export const LOCAL_STORAGE_KEY_AST = 'AST';\nexport const LOCAL_STORAGE_KEY_LAST_USED_PLUGIN = 'LAST_USED_PLUGIN';\n","import { BUTTON_GHOST, INPUT_FIELD_GHOST, LABEL_GHOST } from '../../constants/types';\nimport TreeRenderer from './TreeRenderer';\n\n/* eslint-disable no-param-reassign */\nconst sketch = (p) => {\n  let canvasWidth = window.innerWidth;\n  let canvasHeight = window.innerHeight;\n  let img = null;\n\n  p.setup = () => {\n    // create canvas\n    const c = p.createCanvas(canvasWidth, canvasHeight);\n    TreeRenderer.initialize(p);\n    c.drop(p.gotFile);\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = (props) => {\n    canvasWidth = props.width;\n    canvasHeight = props.height;\n    p.resizeCanvas(props.width, props.height);\n    TreeRenderer.initialize(p);\n  };\n\n  p.draw = () => {\n    if (!img) {\n      p.background(255);\n      p.fill(30);\n      p.noStroke();\n      p.textSize(24);\n      p.textAlign(p.CENTER);\n      p.text('Drag an image file onto the canvas.', p.width / 2, p.height / 2);\n    } else {\n      p.image(img, 0, 0, p.width, p.height);\n    }\n\n    TreeRenderer.draw();\n  };\n\n  p.mouseDragged = () => {\n    TreeRenderer.mouseDragged();\n  };\n\n  p.mousePressed = () => {\n    TreeRenderer.pickSegment();\n  };\n\n  p.keyReleased = () => {\n    const noop = () => null;\n    const functionToInvoke = {\n      // Segmentation\n      87: TreeRenderer.selectActivesParent, // W: Go up one parent\n      83: TreeRenderer.selectActive, // S: Select child on cursor\n      68: TreeRenderer.incrementSegments, // D: Increase subdivision\n      65: TreeRenderer.decrementSegments, // A: Decrease subdivision\n      82: TreeRenderer.toggleDirection, // R: Switch direction\n\n      // Ghosts\n      81: TreeRenderer.popGhost, // Q: Pop Ghost\n      49: TreeRenderer.pushGhost(LABEL_GHOST), // 1: Push Label Ghost\n      50: TreeRenderer.pushGhost(BUTTON_GHOST), // 2: Push Button Ghost\n      51: TreeRenderer.pushGhost(INPUT_FIELD_GHOST), // 3: Push Input Field Ghost\n    }[p.keyCode] || noop;\n    functionToInvoke();\n  };\n\n  p.gotFile = (file) => {\n    // If it's an image file\n    if (file.type === 'image') {\n      // Create an image DOM element but don't show it\n      p.createImg(file.data, '', (newImage) => {\n        img = newImage;\n        img.hide();\n        const aspect = img.width / img.height;\n        const newHeight = p.width / aspect;\n        const scaleFactor = p.width / img.width;\n        p.resizeCanvas(p.width, newHeight || p.height);\n        TreeRenderer.initialize(p, scaleFactor);\n        // Draw the image onto the canvas\n        // p.image(img, 0, 0, p.width, p.height);\n      });\n    } else {\n      console.log('Not an image file!');\n    }\n  };\n};\n/* eslint-enable no-param-reassign */\n\nexport default sketch;\n","// https://stackoverflow.com/a/36862446/1217998\n\nimport { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport sketch from './sketch';\nimport useWindowDimensions from '../useWindowDimensions';\nimport TreeRenderer from './sketch/TreeRenderer';\n\nimport { LOCAL_STORAGE_KEY_AST } from '../constants';\n\nconst useStyles = makeStyles(() => ({\n  wrapper: {\n    display: 'flex',\n  },\n  mainWrapper: {\n    flex: 7,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  drawerWrapper: {\n    flex: 2,\n    maxWidth: '300px',\n  },\n  controls: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '10px',\n  },\n}));\n\nconst Controls = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.controls}>\n      <Typography>Controls</Typography>\n      <Divider />\n      <Typography>W: Go up one parent</Typography>\n      <Typography>S: Select child on cursor</Typography>\n      <Typography>D: Increase subdivision</Typography>\n      <Typography>A: Decrease subdivision</Typography>\n      <Typography>R: Switch direction</Typography>\n      <Divider />\n      <Typography>Ghosts</Typography>\n      <Divider />\n      <Typography>Q: Pop Ghost</Typography>\n      <Typography>1: Push Label Ghost</Typography>\n      <Typography>2: Push Button Ghost</Typography>\n      <Typography>3: Push Input Field Ghost</Typography>\n    </div>\n  );\n};\n\nconst Segmentation = () => {\n  const classes = useStyles();\n\n  const { width } = useWindowDimensions();\n\n  const defaultWidth = width * 0.7;\n  const defaultHeight = (defaultWidth / 16) * 9;\n\n  const onQuickSave = () => {\n    TreeRenderer.dumpAst(true);\n  };\n\n  const onQuickLoad = () => {\n    TreeRenderer.loadAst();\n  };\n\n  const onClear = () => {\n    localStorage.removeItem(LOCAL_STORAGE_KEY_AST);\n    const { p, scaleFactor } = TreeRenderer;\n    TreeRenderer.initialize(p, scaleFactor);\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.mainWrapper}>\n        <P5Wrapper sketch={sketch} width={defaultWidth} height={defaultHeight} />\n      </div>\n      <Paper className={classes.drawerWrapper}>\n        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n          <Button variant=\"contained\" color=\"primary\" onClick={onQuickSave}>Save</Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={onQuickLoad}>Load</Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={onClear}>Clear</Button>\n        </div>\n        <Divider />\n        <Controls />\n        <Divider />\n      </Paper>\n    </div>\n  );\n};\n\nexport default Segmentation;\n","import { BUTTON_GHOST, INPUT_FIELD_GHOST, LABEL_GHOST } from '../../../constants/types';\n\nconst padId = (id) => `${id}`.padStart(2, '0');\n\nexport const generateClassName = (ast) => `wrapper${padId(ast.id)}`;\n\nexport const generateGhostClassName = (ghost) => `ghost${padId(ghost.id)}`;\n\nexport const generateGhostPropName = (ghost) => ({\n  [LABEL_GHOST]: `prop${padId(ghost.id)}`,\n  [BUTTON_GHOST]: `prop${padId(ghost.id)}`,\n  [INPUT_FIELD_GHOST]: null,\n}[ghost.type]);\n\nexport const generateGhostState = (ghost) => ({\n  [LABEL_GHOST]: null,\n  [BUTTON_GHOST]: null,\n  [INPUT_FIELD_GHOST]: {\n    value: `ghostState${padId(ghost.id)}`,\n    setter: `setGhostState${padId(ghost.id)}`,\n  },\n}[ghost.type]);\n\nexport const round = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\n\n// http://www.standardista.com/px-to-rem-conversion-if-root-font-size-is-16px/\nexport const toRem = (px) => px / 16;\n","import { BUTTON_GHOST } from '../../../constants/types';\nimport {\n  generateClassName, generateGhostClassName, round, toRem,\n} from './utils';\n\nconst buttonGhostFormatter = (ghost) => {\n  const name = generateGhostClassName(ghost);\n  return `\n  ${name}:{\n    backgroundColor: 'transparent'\n  }\n`;\n};\n\nconst defaultGhostFormatter = (ghost) => {\n  const name = generateGhostClassName(ghost);\n  return `\n  ${name}: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }\n  `;\n};\n\nconst ghostFormatter = (ghost) => {\n  const formatter = {\n    [BUTTON_GHOST]: buttonGhostFormatter,\n  }[ghost.type] || defaultGhostFormatter;\n\n  return formatter(ghost);\n};\n\nconst rootNodeDimensions = (ast) => {\n  if (!ast.isRoot || !ast.width || !ast.height) return '';\n\n  return `minWidth: '${round(toRem(ast.width))}rem',\n    minHeight: '${round(toRem(ast.height))}rem',\n  `;\n};\n\nconst generateHelper = (ast) => {\n  const name = generateClassName(ast);\n  const self = `\n    ${name}: {\n      display: 'flex',\n      flexDirection: '${ast.direction}',\n      flex: ${round(ast.flex)},\n      ${rootNodeDimensions(ast)}\n    }\n  `;\n\n  const ghostArr = ast.ghosts.map(ghostFormatter);\n  const childStringArr = ast.children.map((childAst) => generateHelper(childAst));\n\n  return [self].concat(ghostArr).concat(childStringArr);\n};\n\nconst generate = (ast) => {\n  const arr = generateHelper(ast);\n  return `{${arr.join(',\\n')}}`;\n};\n\nexport default generate;\n","import { BUTTON_GHOST, INPUT_FIELD_GHOST, LABEL_GHOST } from '../../../constants/types';\nimport {\n  generateClassName,\n  generateGhostClassName,\n  generateGhostPropName,\n  generateGhostState,\n} from './utils';\n\nconst labelGhostFormatter = (ghost) => {\n  const className = generateGhostClassName(ghost);\n  const textProp = generateGhostPropName(ghost);\n\n  return `\n  <div className={classes.${className}}>\n    {${textProp}}\n  </div>`;\n};\n\nconst buttonGhostFormatter = (ghost) => {\n  const className = generateGhostClassName(ghost);\n  const onClickProp = generateGhostPropName(ghost);\n\n  return `\n  <button type=\"button\" className={classes.${className}} onClick={${onClickProp}}>\n    Button ${ghost.id}\n  </button>\n  `;\n};\n\nconst inputFieldGhostFormatter = (ghost) => {\n  const className = generateGhostClassName(ghost);\n  const { value, setter } = generateGhostState(ghost);\n\n  return `\n    <input \n      type=\"text\"\n      className={classes.${className}} \n      onChange={(e) => ${setter}(e.target.value)} \n      value={${value}} \n    />\n  `;\n};\n\nconst generate = (ast) => {\n  const ghostFormatterLookup = {\n    [LABEL_GHOST]: labelGhostFormatter,\n    [BUTTON_GHOST]: buttonGhostFormatter,\n    [INPUT_FIELD_GHOST]: inputFieldGhostFormatter,\n  };\n\n  const ghostDoms = ast.ghosts.map((ghost) => ghostFormatterLookup[ghost.type](ghost));\n  const innerDom = ghostDoms.length ? ghostDoms : ['.'];\n\n  const childStringArr = ast.children.length === 0 ? innerDom : ast.children.map(generate);\n\n  const className = generateClassName(ast);\n\n  const code = `\n  <div className={classes.${className}}>\n    ${childStringArr.join('')}\n  </div>\n  `;\n  return code;\n};\n\nexport default generate;\n","import { generateGhostPropName } from './utils';\n\nconst generateHelper = (ast) => {\n  const ghostPropArr = ast.ghosts.map(generateGhostPropName).filter((g) => g);\n  const childStringArr = ast.children\n    .map((childAst) => generateHelper(childAst))\n    .reduce((acc, next) => acc.concat(next), []);\n\n  return ghostPropArr.concat(childStringArr);\n};\n\nconst generate = (ast) => {\n  const arr = generateHelper(ast);\n  if (arr.length) {\n    return `{${arr.join(',\\n')}}`;\n  }\n  return '';\n};\n\nexport default generate;\n","import { BUTTON_GHOST, INPUT_FIELD_GHOST, LABEL_GHOST } from '../../../constants/types';\nimport { generateGhostPropName } from './utils';\n\nconst labelGhostFormatter = (ghost) => {\n  const name = generateGhostPropName(ghost);\n\n  return `${name}: PropTypes.string.isRequired`;\n};\n\nconst buttonGhostFormatter = (ghost) => {\n  const name = generateGhostPropName(ghost);\n\n  return `${name}: PropTypes.func.isRequired`;\n};\n\nconst generateHelper = (ast) => {\n  const ghostFormatterLookup = {\n    [LABEL_GHOST]: labelGhostFormatter,\n    [BUTTON_GHOST]: buttonGhostFormatter,\n    [INPUT_FIELD_GHOST]: () => null,\n  };\n\n  const ghostPropArr = ast.ghosts\n    .map((ghost) => ghostFormatterLookup[ghost.type](ghost))\n    .filter((g) => g);\n  const childStringArr = ast.children\n    .map((childAst) => generateHelper(childAst))\n    .reduce((acc, next) => acc.concat(next), []);\n\n  return ghostPropArr.concat(childStringArr);\n};\n\nconst generate = (ast) => {\n  const arr = generateHelper(ast);\n  if (arr.length) {\n    return `${arr.join(',\\n')}`;\n  }\n  return '';\n};\n\nexport default generate;\n","import { BUTTON_GHOST, INPUT_FIELD_GHOST, LABEL_GHOST } from '../../../constants/types';\nimport { generateGhostState } from './utils';\n\nconst inputFieldGhostFormatter = (ghost) => {\n  const { value, setter } = generateGhostState(ghost);\n\n  return `const [${value}, ${setter}] = React.useState('')`;\n};\n\nconst generateHelper = (ast) => {\n  const ghostFormatterLookup = {\n    [LABEL_GHOST]: () => null,\n    [BUTTON_GHOST]: () => null,\n    [INPUT_FIELD_GHOST]: inputFieldGhostFormatter,\n  };\n\n  const ghostPropArr = ast.ghosts\n    .map((ghost) => ghostFormatterLookup[ghost.type](ghost))\n    .filter((g) => g);\n  const childStringArr = ast.children\n    .map((childAst) => generateHelper(childAst))\n    .reduce((acc, next) => acc.concat(next), []);\n\n  return ghostPropArr.concat(childStringArr);\n};\n\nconst generate = (ast) => {\n  const arr = generateHelper(ast);\n  if (arr.length) {\n    return `${arr.join(';\\n')}`;\n  }\n  return '';\n};\n\nexport default generate;\n","import generateJss from './generate-jss';\nimport generateDom from './generate-dom';\nimport generateProps from './generate-props';\nimport generatePropsTypes from './generate-props-types';\nimport generateState from './generate-state';\n\nconst generate = (ast) => {\n  const jss = generateJss(ast);\n  const dom = generateDom(ast);\n  const props = generateProps(ast);\n  const propTypes = generatePropsTypes(ast);\n  const state = generateState(ast);\n\n  const code = `\n  import React from 'react';\n  import PropTypes from 'prop-types';\n\n  import makeStyles from '@material-ui/core/styles/makeStyles';\n\n  // import './debug.css'; // For debugging\n\n  const useStyles = makeStyles(${jss});\n\n  const MyComponent = (${props}) => {\n    const classes = useStyles(${props});\n    ${state}\n    return (\n      ${dom}\n    )\n  }\n\n  MyComponent.propTypes = {\n    ${propTypes}\n  }\n\n  export default MyComponent;\n  `;\n  return code;\n};\n\nexport default generate;\n","import { BUTTON_GHOST, INPUT_FIELD_GHOST, LABEL_GHOST } from '../../../constants/types';\nimport { generateGhostPropName } from './utils';\n\nconst labelGhostFormatter = (ghost) => {\n  const name = generateGhostPropName(ghost);\n\n  return `${name}={text('${name}','placeholder_${name}')}`;\n};\n\nconst buttonGhostFormatter = (ghost) => {\n  const name = generateGhostPropName(ghost);\n\n  return `${name}={action('${name}OnClick')}`;\n};\n\nconst generateHelper = (ast) => {\n  const ghostFormatterLookup = {\n    [LABEL_GHOST]: labelGhostFormatter,\n    [BUTTON_GHOST]: buttonGhostFormatter,\n    [INPUT_FIELD_GHOST]: () => null,\n  };\n\n  const ghostPropArr = ast.ghosts\n    .map((ghost) => ghostFormatterLookup[ghost.type](ghost))\n    .filter((g) => g);\n  const childStringArr = ast.children\n    .map((childAst) => generateHelper(childAst))\n    .reduce((acc, next) => acc.concat(next), []);\n\n  return ghostPropArr.concat(childStringArr);\n};\n\nconst generate = (ast) => {\n  const arr = generateHelper(ast);\n\n  const code = `\n  import React from 'react';\n  import { action } from '@storybook/addon-actions';\n  import { withKnobs, text } from '@storybook/addon-knobs';\n\n  import MyComponent from './MyComponent';\n  \n  export default {\n    title: 'MyComponent',\n    component: MyComponent,\n    decorators: [withKnobs],\n  };\n  \n  export const normal = () => (\n    <MyComponent \n      ${arr.join('\\n')}\n    />\n  );\n\n  normal.story = { name: 'normal' };\n  \n  `;\n  return code;\n};\n\nexport default generate;\n","const generate = () => `\n  * {\n    border: 1px solid black;\n  }\n  `;\n\nexport default generate;\n","import ReactMui from './react-mui';\nimport Ast from './ast';\n\nconst REACT_MUI = 'REACT_MUI';\nconst AST = 'AST';\n\nexport const availablePlugins = [\n  { value: REACT_MUI, label: 'React + MaterialUI JSS' },\n  { value: AST, label: 'AST' },\n];\n\nexport const plugins = {\n  REACT_MUI: ReactMui,\n  AST: Ast,\n};\n","import prettier from 'prettier/standalone';\nimport parserBabel from 'prettier/parser-babel';\n\nimport generateJsx from './generate-jsx';\nimport generateStorybook from './generate-storybook';\nimport generateDebugCss from './generate-debug-css';\n\nconst generate = (ast) => {\n  const jsxCode = generateJsx(ast);\n  const storybookCode = generateStorybook(ast);\n  const debugCssCode = generateDebugCss();\n  const opts = { parser: 'babel', plugins: [parserBabel] };\n  const files = {\n    'MyComponent.js': prettier.format(jsxCode, opts),\n    'MyComponent.stories.js': prettier.format(storybookCode, opts),\n    'debug.css': debugCssCode,\n  };\n\n  return {\n    language: 'jsx',\n    files,\n  };\n};\n\nexport default generate;\n","const generate = (ast) => {\n  const code = JSON.stringify(ast, null, 2);\n  return {\n    language: 'json',\n    files: { 'ast.json': code },\n  };\n};\n\nexport default generate;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PrismAsyncLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport dark from 'react-syntax-highlighter/dist/esm/styles/prism/vsc-dark-plus';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport * as Jszip from 'jszip';\nimport FileSaver from 'file-saver';\n\nimport { availablePlugins, plugins } from './plugins';\nimport { LOCAL_STORAGE_KEY_AST, LOCAL_STORAGE_KEY_LAST_USED_PLUGIN } from '../constants';\n\nconst useStyles = makeStyles(() => ({\n  wrapper: {\n    display: 'flex',\n  },\n  mainWrapper: {\n    flex: 7,\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'black',\n  },\n  syntaxHighlighter: {\n    width: '100%',\n  },\n  drawerWrapper: {\n    flex: 2,\n    maxWidth: '300px',\n    padding: '1%',\n  },\n  fileSelector: {\n\n  },\n  formControl: {\n    display: 'flex',\n  },\n}));\n\nconst FileSelector = ({ fileNames, currentFileIndex, setCurrentFileIndex }) => {\n  const classes = useStyles();\n  const tabs = fileNames.map((fileName) => (\n    <Tab key={fileName} label={fileName} />\n  ));\n  return (\n    <Tabs\n      orientation=\"vertical\"\n      value={currentFileIndex}\n      onChange={(_, v) => setCurrentFileIndex(v)}\n      className={classes.fileSelector}\n    >\n      {tabs}\n    </Tabs>\n  );\n};\n\nFileSelector.propTypes = {\n  fileNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  currentFileIndex: PropTypes.number.isRequired,\n  setCurrentFileIndex: PropTypes.func.isRequired,\n};\n\nconst PluginSelector = ({ pluginOptions, pluginType, setPluginType }) => {\n  const classes = useStyles();\n\n  const menuItems = pluginOptions.map((pluginOption) => (\n    <MenuItem key={pluginOption.value} value={pluginOption.value}>{pluginOption.label}</MenuItem>\n  ));\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"plugin-selector\">Select Plugin</InputLabel>\n      <Select\n        labelId=\"plugin-selector\"\n        id=\"plugin-selector\"\n        value={pluginType}\n        onChange={(e) => setPluginType(e.target.value)}\n      >\n        {menuItems}\n      </Select>\n    </FormControl>\n  );\n};\n\nPluginSelector.propTypes = {\n  pluginOptions: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n  })).isRequired,\n  pluginType: PropTypes.string.isRequired,\n  setPluginType: PropTypes.func.isRequired,\n};\n\nconst LAST_USED_PLUGIN = LOCAL_STORAGE_KEY_LAST_USED_PLUGIN;\n\nconst CodeGeneration = () => {\n  const classes = useStyles();\n\n  const ast = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_AST) || '{\"message\":\"No ast found\"}');\n\n  const lastUsedPlugin = localStorage.getItem(LAST_USED_PLUGIN);\n  const defaultPlugin = availablePlugins[0].value;\n  const [pluginType, setPluginType] = useState(lastUsedPlugin || defaultPlugin);\n  const [currentFileIndex, setCurrentFileIndex] = useState(0);\n\n  useEffect(() => {\n    setCurrentFileIndex(0);\n    localStorage.setItem(LAST_USED_PLUGIN, pluginType);\n  }, [pluginType]);\n\n  if (!plugins[pluginType]) {\n    setPluginType(defaultPlugin);\n    return <div />;\n  }\n\n  const plugin = plugins[pluginType];\n  const generation = plugin(ast);\n  const fileNames = Object.keys(generation.files);\n  const code = generation.files[fileNames[currentFileIndex]] || '';\n\n  const onDownload = async () => {\n    const zip = new Jszip();\n    fileNames.forEach((fileName) => {\n      zip.file(fileName, generation.files[fileName]);\n    });\n    zip.file('ast.json', JSON.stringify(ast));\n    const content = await zip.generateAsync({ type: 'blob' });\n    FileSaver.saveAs(content, 'code.zip');\n  };\n\n  const onCopyToClipboard = () => navigator.clipboard.writeText(code);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.mainWrapper}>\n        <SyntaxHighlighter\n          showLineNumbers\n          language={generation.language}\n          style={dark}\n          className={classes.syntaxHighlighter}\n        >\n          {code}\n        </SyntaxHighlighter>\n      </div>\n      <Paper className={classes.drawerWrapper}>\n        <Button style={{ width: '100%' }} variant=\"outlined\" color=\"primary\" onClick={onCopyToClipboard}>\n          Copy to Clipboard\n        </Button>\n        <Button style={{ width: '100%' }} variant=\"outlined\" color=\"primary\" onClick={onDownload}>\n          Download ZIP\n        </Button>\n        <PluginSelector\n          pluginOptions={availablePlugins}\n          pluginType={pluginType}\n          setPluginType={setPluginType}\n        />\n        <FileSelector\n          fileNames={fileNames}\n          currentFileIndex={currentFileIndex}\n          setCurrentFileIndex={setCurrentFileIndex}\n        />\n        <Divider />\n      </Paper>\n    </div>\n  );\n};\n\nexport default CodeGeneration;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport queryString from 'query-string';\n\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport Segmentation from './Segmentation';\nimport TreeRenderer from './Segmentation/sketch/TreeRenderer';\nimport CodeGeneration from './CodeGeneration';\n\nimport { LOCAL_STORAGE_KEY_AST } from './constants';\n\nfunction TabPanel(props) {\n  const {\n    children, value, index,\n  } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node.isRequired,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    height: '100vh',\n  },\n  tabWrapper: {\n    backgroundColor: '#FF8300',\n    color: 'WHITE',\n  },\n  tabPannelWrapper: {\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  const queryTab = Number.parseInt(queryString.parse(window.location.search).tab, 10) || 0;\n\n  const [tab, setTab] = useState(queryTab);\n\n  const handleChange = (event, newValue) => {\n    const ast = TreeRenderer.dumpAst();\n    localStorage.setItem(LOCAL_STORAGE_KEY_AST, JSON.stringify(ast));\n    window.history.pushState({}, '', `?tab=${newValue}`);\n    setTab(newValue);\n  };\n\n  const tabLabels = ['Segmentation', 'Code Generation'];\n\n  const tabs = tabLabels.map((label) => (\n    <Tab label={label} key={label} id={label} aria-controls={label} />\n  ));\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.tabWrapper}>\n        <Tabs value={tab} onChange={handleChange} aria-label=\"Tabs\">\n          {tabs}\n        </Tabs>\n      </div>\n      <div className={classes.tabPannelWrapper}>\n        <TabPanel value={tab} index={0}>\n          <Segmentation />\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n          <CodeGeneration />\n        </TabPanel>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}